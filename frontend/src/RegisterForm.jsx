import { useForm } from "react-hook-form";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { useState } from "react";

const RegisterForm = () => {
  const {
    register,
    handleSubmit,
    formState: { errors },
  } = useForm();
  const navigate = useNavigate();
  const [message, setMessage] = useState("");

  const onSubmit = async (data) => {
    try {
      const response = await axios.post(
        "http://127.0.0.1:8000/auth/auth/register",
        data,
        {
          headers: { "Content-Type": "application/json" },
        }
      );

      localStorage.setItem("token", response.data.access_token);
      setMessage("–£—Å–ø–µ—à–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!");
      window.location.href = "http://10.9.96.160:3001/dashboard";
    } catch (error) {
      setMessage(
        "–û—à–∏–±–∫–∞: " + (error.response?.data?.detail || "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞")
      );
    }
  };

  return (
    <form onSubmit={handleSubmit(onSubmit)} className="grid gap-5 text-center">
      {/* üìå –ü–æ–ª–µ: –ü–æ—á—Ç–∞ */}
      <div className="text-left">
        <label className="text-sm font-medium">–ü–æ—á—Ç–∞</label>
        <input
          {...register("email", { required: "–ü–æ—á—Ç–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–∞" })}
          type="email"
          className="border bg-background placeholder:text-gray-500 focus:ring-2 focus:ring-blue-500 h-10 w-full rounded-md px-3 py-2 text-sm"
        />
        {errors.email && (
          <p className="text-red-500 text-sm">{errors.email.message}</p>
        )}
      </div>

      {/* üìå –ü–æ–ª–µ: –õ–æ–≥–∏–Ω */}
      <div className="text-left">
        <label className="text-sm font-medium">–õ–æ–≥–∏–Ω</label>
        <input
          {...register("name", { required: "–õ–æ–≥–∏–Ω –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω" })}
          type="text"
          className="border bg-background placeholder:text-gray-500 focus:ring-2 focus:ring-blue-500 h-10 w-full rounded-md px-3 py-2 text-sm"
        />
        {errors.name && (
          <p className="text-red-500 text-sm">{errors.name.message}</p>
        )}
      </div>

      {/* üìå –ü–æ–ª–µ: –ü–∞—Ä–æ–ª—å */}
      <div className="text-left">
        <label className="text-sm font-medium">–ü–∞—Ä–æ–ª—å</label>
        <input
          {...register("password", { required: "–ü–∞—Ä–æ–ª—å –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω" })}
          type="password"
          className="border bg-background placeholder:text-gray-500 focus:ring-2 focus:ring-blue-500 h-10 w-full rounded-md px-3 py-2 text-sm"
        />
        {errors.password && (
          <p className="text-red-500 text-sm">{errors.password.message}</p>
        )}
      </div>

      {/* ‚úÖ –ì–∞–ª–æ—á–∫–∞ —Å–æ–≥–ª–∞—Å–∏—è */}
      <div className="flex items-center gap-2 text-left">
        <input
          type="checkbox"
          {...register("agreeToPolicy", {
            required: "–í—ã –¥–æ–ª–∂–Ω—ã —Å–æ–≥–ª–∞—Å–∏—Ç—å—Å—è —Å –ø–æ–ª–∏—Ç–∏–∫–æ–π",
          })}
          className="w-4 h-4 accent-blue-500"
        />
        <label className="text-sm">
          –Ø —Å–æ–≥–ª–∞—à–∞—é—Å—å —Å{" "}
          <a href="/privacy" className="text-blue-500 underline">
            –ø–æ–ª–∏—Ç–∏–∫–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
          </a>
        </label>
      </div>
      {errors.agreeToPolicy && (
        <p className="text-red-500 text-sm">{errors.agreeToPolicy.message}</p>
      )}

      {/* üîπ –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ */}
      <button
        type="submit"
        className="bg-black text-white hover:bg-gray-700 transition rounded-md px-4 py-2 w-full"
      >
        –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è
      </button>
    </form>
  );
};

export default RegisterForm;