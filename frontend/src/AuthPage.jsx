import { useState, useEffect } from "react";
import { motion } from "framer-motion";
import AuthImage from "./AuthImage";
import LoginForm from "./LoginForm";
import RegisterForm from "./RegisterForm";
import { Moon, Sun } from "lucide-react"; // –ò–∫–æ–Ω–∫–∏
import FooterPage from "./FooterPage";
import ResetPasswordModal from "./ResetPasswordModal"; 

const AuthPage = () => {
  const [isRegistering, setIsRegistering] = useState(false);
  const [darkMode, setDarkMode] = useState(
    localStorage.getItem("theme") === "dark"
  );
  const [isResetOpen, setIsResetOpen] = useState(false); 

  // –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–º—É –≤ localStorage
  useEffect(() => {
    if (darkMode) {
      document.documentElement.classList.add("dark");
    } else {
      document.documentElement.classList.remove("dark");
    }
    localStorage.setItem("theme", darkMode ? "dark" : "light");
  }, [darkMode]);

  return (
<div className={`min-h-screen flex flex-col transition-colors duration-700 ${darkMode ? "bg-gray-900 text-white" : "bg-white text-black"}`}>
  {/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –æ—Å–Ω–æ–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã */}
  <div className="flex-1 w-full lg:grid lg:grid-cols-2 xl:min-h-screen relative overflow-hidden">
    
    {/* –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ç–µ–º—ã */}
    <button
      className="absolute top-5 right-5 p-2 rounded-full bg-gray-200 dark:bg-gray-800 z-50 hidden lg:block"
      onClick={() => setDarkMode(!darkMode)}
    >
      {darkMode ? <Sun className="text-yellow-400" /> : <Moon className="text-gray-700" />}
    </button>

    {/* ‚úÖ –ú–û–ë–ò–õ–¨–ù–ê–Ø –í–ï–†–°–ò–Ø */}
    <div className="lg:hidden relative h-screen flex flex-col  justify-center min-h-screen w-full px-6 overflow-hidden">
      {/* üî• –ö–∞—Ä—Ç–∏–Ω–∫–∞-—Ñ–æ–Ω */}
      <div className="absolute inset-0 -z-10 flex justify-center items-center opacity-20">
        <AuthImage />
      </div>

      {/* üìå –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä —Ñ–æ—Ä–º—ã */}
      <div className="relative z-10 bg-white dark:bg-gray-800 p-6 -top-16 rounded-xl shadow-2xl w-full max-w-sm">
        <h1 className="text-2xl font-bold text-center">
          {isRegistering ? "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è" : "–í—Ö–æ–¥"}
        </h1>
        <p className="text-gray-500 dark:text-gray-400 text-center mb-4">
          {isRegistering ? "–°–æ–∑–¥–∞–π—Ç–µ –∞–∫–∫–∞—É–Ω—Ç" : "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞"}
        </p>

        {/* üîπ –§–æ—Ä–º–∞ */}
        {isRegistering ? (
          <RegisterForm key="register" />
        ) : (
          <LoginForm key="login" />
        )}

        {/* üîπ –ö–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è */}
        <button
          className="mt-4 w-full border border-gray-300 dark:border-gray-600 
            bg-gray-100 dark:bg-gray-700 text-black dark:text-white 
            hover:bg-gray-200 dark:hover:bg-gray-600 transition 
            rounded-lg px-4 py-2"
          onClick={() => setIsRegistering(!isRegistering)}
        >
          {isRegistering ? "–ù–∞–∑–∞–¥ –∫–æ –≤—Ö–æ–¥—É" : "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"}
        </button>
      </div>
    </div>

    {/* üñ•Ô∏è –î–µ—Å–∫—Ç–æ–ø–Ω–∞—è –≤–µ—Ä—Å–∏—è */}
    <motion.div
      className={`block1 z-10 flex min-h-screen items-center justify-center py-12 shadow-2xl transition-colors duration-700 ${darkMode ? "bg-gray-800" : "bg-white"}`}
      animate={{ x: isRegistering ? "0%" : "100%" }}
      transition={{ duration: 0.5, ease: "easeInOut" }}
    >
      <div className="mx-auto grid w-[350px] gap-6">
        <div className="grid gap-2 text-center">
          <h1 className="text-3xl font-bold">
            {isRegistering ? "–° –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º!" : "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å"}
          </h1>
          <p className="text-grey text-muted-foreground pb-4">
            {isRegistering ? "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏" : "–í–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞"}
          </p>
          {isRegistering ? <RegisterForm /> : <LoginForm />}
        </div>
        <button
                onClick={() => setIsResetOpen(true)}
                className="text-blue-500 hover:text-blue-700 text-sm mt-2 block text-center"
              >
                –ó–∞–±—ã–ª–∏ –ø–∞—Ä–æ–ª—å?
              </button>
        <button
          className="inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 border border-input bg-background hover:bg-accent hover:text-accent-foreground h-10 px-4 py-2 w-full"
          onClick={() => setIsRegistering(!isRegistering)}
        >
          {isRegistering ? "–ù–∞–∑–∞–¥ –∫ –≤—Ö–æ–¥—É" : "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"}
        </button>
      </div>
    </motion.div>

    {/* –ü—Ä–∞–≤–∞—è —á–∞—Å—Ç—å (–ö–∞—Ä—Ç–∏–Ω–∫–∞) */}
    <motion.div
      className={`block2 hidden overflow-hidden bg-gradient-to-br lg:block absolute top-0 left-0 w-full h-full lg:w-1/2 transition-colors duration-700 ${darkMode ? "from-gray-700 via-gray-800 to-black" : "from-slate-200 via-gray-50 to-stone-200"}`}
      animate={{ x: isRegistering ? "100%" : "0%" }}
      transition={{ duration: 0.5, ease: "easeInOut" }}
    >
      <AuthImage />
    </motion.div>
  </div>

  {/* ‚úÖ –§—É—Ç–µ—Ä (–∑–∞–∫—Ä–µ–ø–ª–µ–Ω –≤–Ω–∏–∑—É) */}
  <div className="absolute bottom-0 z-50 w-full">
  <FooterPage darkMode={darkMode} className="mt-auto"/>
  </div>
        {/* ‚úÖ –ü–æ–¥–∫–ª—é—á–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ */}
        <ResetPasswordModal isOpen={isResetOpen} onClose={() => setIsResetOpen(false)} />
</div>
  );
};

export default AuthPage;